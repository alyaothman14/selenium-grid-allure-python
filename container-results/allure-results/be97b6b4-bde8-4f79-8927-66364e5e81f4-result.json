{"name": "User is not allowed to enter invalid phone number", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_login.TestLogin object at 0xffffb7426110>\n\n>   ???\n\n/Users/alya/Documents/selenium-ci-cd/tests/test_login.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:31: in fill_phone_number\n    self.fill_text(self.MOBILE_NUMBER, phone_number)\npages/base_page.py:26: in fill_text\n    element: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e806882f3160796cf47a5bf15c83ff44\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0xffffb743cf40>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "description": "User is not allowed to enter invalid phone number", "steps": [{"name": "User clicks login icon in nav bar", "status": "passed", "start": 1684754343981, "stop": 1684754349945}, {"name": "Fill phone number", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/selenium-test/pages/login_page.py\", line 31, in fill_phone_number\n    self.fill_text(self.MOBILE_NUMBER, phone_number)\n  File \"/home/selenium-test/pages/base_page.py\", line 26, in fill_text\n    element: WebElement = self.wait.until(\n                          ^^^^^^^^^^^^^^^^\n  File \"/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "phone_number", "value": "'11111111111'"}], "start": 1684754349946, "stop": 1684754380169}], "attachments": [{"name": "stdout", "source": "0e585a18-3729-4407-896e-04d239e9167c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser", "value": "'chrome'"}], "start": 1684754343980, "stop": 1684754380187, "uuid": "96c071a5-cc2b-468b-9c11-f9c05ed18a76", "historyId": "94f93c0710e43c69cf3d1609e68099c8", "testCaseId": "3de6d090666773ec0413f1136b098df9", "fullName": "tests.test_login.TestLogin#test_invalid_phone_number", "labels": [{"name": "tag", "value": "chrome"}, {"name": "story", "value": "Login functionality"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "f787a93f4bbd"}, {"name": "thread", "value": "29-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}