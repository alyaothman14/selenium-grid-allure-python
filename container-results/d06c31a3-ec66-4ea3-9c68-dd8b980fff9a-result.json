{"name": "User is able to change country code", "status": "broken", "statusDetails": {"message": "ValueError: setup did not yield a value", "trace": "cls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0xffffb74818a0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/runner.py:262: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/pluggy/_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/pluggy/_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/runner.py:157: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/runner.py:497: in setup\n    raise exc\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/runner.py:494: in setup\n    col.setup()\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/python.py:1802: in setup\n    self._request._fillfixtures()\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/fixtures.py:551: in _fillfixtures\n    item.funcargs[argname] = self.getfixturevalue(argname)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/fixtures.py:570: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/fixtures.py:592: in _get_active_fixturedef\n    self._compute_fixture_value(fixturedef)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/fixtures.py:678: in _compute_fixture_value\n    fixturedef.execute(request=subrequest)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/fixtures.py:1076: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/pluggy/_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/pluggy/_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/fixtures.py:1130: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfixturefunc = <function setup at 0xffffb7404180>\nrequest = <SubRequest 'setup' for <Function test_country_code_change[country_code_data1-chrome]>>\nkwargs = {'browser': 'chrome', 'request': <SubRequest 'setup' for <Function test_country_code_change[country_code_data1-chrome]>>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n>               raise ValueError(f\"{request.fixturename} did not yield a value\") from None\nE               ValueError: setup did not yield a value\n\n/root/.local/share/virtualenvs/selenium-test-Ou9L0FGN/lib/python3.11/site-packages/_pytest/fixtures.py:904: ValueError"}, "description": "User is able to change country code", "attachments": [{"name": "stdout", "source": "3fea748e-f84a-479c-9dd7-1126e3cc30ae-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "country_code_data", "value": "{'country': 'Albania', 'code': '+355'}"}, {"name": "browser", "value": "'chrome'"}], "start": 1684754382077, "stop": 1684754382077, "uuid": "61a1dbe8-2fab-4e97-b744-4a3cf7cee707", "historyId": "d4789fa5b9353700b289a8b501933add", "testCaseId": "e356ab755a93f95f97282cb38aa4847c", "fullName": "tests.test_login.TestLogin#test_country_code_change", "labels": [{"name": "tag", "value": "chrome"}, {"name": "tag", "value": "chrome"}, {"name": "story", "value": "Login functionality"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "f787a93f4bbd"}, {"name": "thread", "value": "29-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}